:def package \m -> return $ ":! ghc-pkg --simple-output find-module " ++ m
:def rr \_ -> return ":script ~/.ghci"

:set prompt       "\ESC[1;36m\x03BB> \ESC[m"
:set prompt-cont  "\ESC[1;36m\x03BB| \ESC[m"

:set +m
:set +s
:set +t

:def hlint const . return $ ":! hlint \"src\""
:def hoogle \s -> return $ ":! hoogle --count=15 \"" ++ s ++ "\""
:def pf \s -> return $ ":! pointfree \"" ++ s ++ "\""

:set -fno-warn-unused-imports
:set -fprint-explicit-foralls

-- :seti -XGADTSyntax
:seti -XGeneralizedNewtypeDeriving
:seti -XInstanceSigs
:seti -XLambdaCase
:seti -XPartialTypeSignatures
-- :seti -XScopedTypeVariables
:seti -XTypeApplications
:seti -XOverloadedStrings
:seti -XRankNTypes


-- Pretty printing of it
import qualified IPPrint.Colored
:set -interactive-print=IPPrint.Colored.cpprint
:def cp (\_ -> return ":set -interactive-print=IPPrint.Colored.cpprint")
:def ncp (\_ -> return ":set -interactive-print=print")
